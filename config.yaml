# Workers will be run in the sequence given here
# Each worker has inputs and produces an output
# If the input is not known by the time the worker is run (from another, previous worker) then the user will be asked to enter it
#
# Note: user interaction is needed for tool use!
#
# planner:
#   assistant: (see below)
#
# worker: dictionary - key: string, value as below
#   inputs: list of strings
#   output: string
#   task: string
#   has_user_interaction: boolean, defaults to true
#   new_thread: boolean, defaults to true
#   assistant: (see below)
#
#   assistant can be specified here with name and instruction or set up in the OpenAI platform and retrieved by the assistant's id
#
#   name: string
#   instruction: string
#   functions: list of strings
#   model: GPT model, optional, defaults to gpt-4
#
# Note: It is advisable to create assistants via the platform dashboard because
#       all assistants created via the API will show and remain there until manually deleted!
#
# There has to be a worker that is called "Planner"
#
planner:
  assistant:
    id: asst_CM4NRyhejmZuruJUdqydY2g2
    # to edit: https://platform.openai.com/assistants/asst_CM4NRyhejmZuruJUdqydY2g2
workers:
  Joker:
    inputs:
      - Feedback
    output: Joke
    assistant:
      name: Joker
      instruction: |
        You are a comedy genius. You tell a joke.
        Your recceive ffeedback on your last joke; this is your input.
        You learn from your feedback, and improve your jokes.
    new_thread: false
  Critique:
    inputs:
      - Joke
    output: Feedback
    assistant:
      name: Critique
      instruction: |
        You are a comedy critic. You critique the joke.
        Your recceive a joke; this is your input.
    new_thread: false